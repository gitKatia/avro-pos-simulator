/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.kat.avropossimulator.model;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class Item extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 5563803600827605359L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Item\",\"namespace\":\"com.kat.avropossimulator.model\",\"fields\":[{\"name\":\"item_code\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"item_description\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"item_price\",\"type\":[\"null\",\"double\"]},{\"name\":\"item_quantity\",\"type\":[\"null\",\"int\"]},{\"name\":\"total_value\",\"type\":[\"null\",\"double\"]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<Item> ENCODER =
      new BinaryMessageEncoder<Item>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Item> DECODER =
      new BinaryMessageDecoder<Item>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<Item> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<Item> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<Item> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<Item>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this Item to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a Item from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a Item instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static Item fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.lang.String item_code;
  private java.lang.String item_description;
  private java.lang.Double item_price;
  private java.lang.Integer item_quantity;
  private java.lang.Double total_value;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Item() {}

  /**
   * All-args constructor.
   * @param item_code The new value for item_code
   * @param item_description The new value for item_description
   * @param item_price The new value for item_price
   * @param item_quantity The new value for item_quantity
   * @param total_value The new value for total_value
   */
  public Item(java.lang.String item_code, java.lang.String item_description, java.lang.Double item_price, java.lang.Integer item_quantity, java.lang.Double total_value) {
    this.item_code = item_code;
    this.item_description = item_description;
    this.item_price = item_price;
    this.item_quantity = item_quantity;
    this.total_value = total_value;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return item_code;
    case 1: return item_description;
    case 2: return item_price;
    case 3: return item_quantity;
    case 4: return total_value;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: item_code = value$ != null ? value$.toString() : null; break;
    case 1: item_description = value$ != null ? value$.toString() : null; break;
    case 2: item_price = (java.lang.Double)value$; break;
    case 3: item_quantity = (java.lang.Integer)value$; break;
    case 4: total_value = (java.lang.Double)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'item_code' field.
   * @return The value of the 'item_code' field.
   */
  public java.lang.String getItemCode() {
    return item_code;
  }


  /**
   * Sets the value of the 'item_code' field.
   * @param value the value to set.
   */
  public void setItemCode(java.lang.String value) {
    this.item_code = value;
  }

  /**
   * Gets the value of the 'item_description' field.
   * @return The value of the 'item_description' field.
   */
  public java.lang.String getItemDescription() {
    return item_description;
  }


  /**
   * Sets the value of the 'item_description' field.
   * @param value the value to set.
   */
  public void setItemDescription(java.lang.String value) {
    this.item_description = value;
  }

  /**
   * Gets the value of the 'item_price' field.
   * @return The value of the 'item_price' field.
   */
  public java.lang.Double getItemPrice() {
    return item_price;
  }


  /**
   * Sets the value of the 'item_price' field.
   * @param value the value to set.
   */
  public void setItemPrice(java.lang.Double value) {
    this.item_price = value;
  }

  /**
   * Gets the value of the 'item_quantity' field.
   * @return The value of the 'item_quantity' field.
   */
  public java.lang.Integer getItemQuantity() {
    return item_quantity;
  }


  /**
   * Sets the value of the 'item_quantity' field.
   * @param value the value to set.
   */
  public void setItemQuantity(java.lang.Integer value) {
    this.item_quantity = value;
  }

  /**
   * Gets the value of the 'total_value' field.
   * @return The value of the 'total_value' field.
   */
  public java.lang.Double getTotalValue() {
    return total_value;
  }


  /**
   * Sets the value of the 'total_value' field.
   * @param value the value to set.
   */
  public void setTotalValue(java.lang.Double value) {
    this.total_value = value;
  }

  /**
   * Creates a new Item RecordBuilder.
   * @return A new Item RecordBuilder
   */
  public static com.kat.avropossimulator.model.Item.Builder newBuilder() {
    return new com.kat.avropossimulator.model.Item.Builder();
  }

  /**
   * Creates a new Item RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Item RecordBuilder
   */
  public static com.kat.avropossimulator.model.Item.Builder newBuilder(com.kat.avropossimulator.model.Item.Builder other) {
    if (other == null) {
      return new com.kat.avropossimulator.model.Item.Builder();
    } else {
      return new com.kat.avropossimulator.model.Item.Builder(other);
    }
  }

  /**
   * Creates a new Item RecordBuilder by copying an existing Item instance.
   * @param other The existing instance to copy.
   * @return A new Item RecordBuilder
   */
  public static com.kat.avropossimulator.model.Item.Builder newBuilder(com.kat.avropossimulator.model.Item other) {
    if (other == null) {
      return new com.kat.avropossimulator.model.Item.Builder();
    } else {
      return new com.kat.avropossimulator.model.Item.Builder(other);
    }
  }

  /**
   * RecordBuilder for Item instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Item>
    implements org.apache.avro.data.RecordBuilder<Item> {

    private java.lang.String item_code;
    private java.lang.String item_description;
    private java.lang.Double item_price;
    private java.lang.Integer item_quantity;
    private java.lang.Double total_value;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.kat.avropossimulator.model.Item.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.item_code)) {
        this.item_code = data().deepCopy(fields()[0].schema(), other.item_code);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.item_description)) {
        this.item_description = data().deepCopy(fields()[1].schema(), other.item_description);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.item_price)) {
        this.item_price = data().deepCopy(fields()[2].schema(), other.item_price);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.item_quantity)) {
        this.item_quantity = data().deepCopy(fields()[3].schema(), other.item_quantity);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.total_value)) {
        this.total_value = data().deepCopy(fields()[4].schema(), other.total_value);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
    }

    /**
     * Creates a Builder by copying an existing Item instance
     * @param other The existing instance to copy.
     */
    private Builder(com.kat.avropossimulator.model.Item other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.item_code)) {
        this.item_code = data().deepCopy(fields()[0].schema(), other.item_code);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.item_description)) {
        this.item_description = data().deepCopy(fields()[1].schema(), other.item_description);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.item_price)) {
        this.item_price = data().deepCopy(fields()[2].schema(), other.item_price);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.item_quantity)) {
        this.item_quantity = data().deepCopy(fields()[3].schema(), other.item_quantity);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.total_value)) {
        this.total_value = data().deepCopy(fields()[4].schema(), other.total_value);
        fieldSetFlags()[4] = true;
      }
    }

    /**
      * Gets the value of the 'item_code' field.
      * @return The value.
      */
    public java.lang.String getItemCode() {
      return item_code;
    }


    /**
      * Sets the value of the 'item_code' field.
      * @param value The value of 'item_code'.
      * @return This builder.
      */
    public com.kat.avropossimulator.model.Item.Builder setItemCode(java.lang.String value) {
      validate(fields()[0], value);
      this.item_code = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'item_code' field has been set.
      * @return True if the 'item_code' field has been set, false otherwise.
      */
    public boolean hasItemCode() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'item_code' field.
      * @return This builder.
      */
    public com.kat.avropossimulator.model.Item.Builder clearItemCode() {
      item_code = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'item_description' field.
      * @return The value.
      */
    public java.lang.String getItemDescription() {
      return item_description;
    }


    /**
      * Sets the value of the 'item_description' field.
      * @param value The value of 'item_description'.
      * @return This builder.
      */
    public com.kat.avropossimulator.model.Item.Builder setItemDescription(java.lang.String value) {
      validate(fields()[1], value);
      this.item_description = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'item_description' field has been set.
      * @return True if the 'item_description' field has been set, false otherwise.
      */
    public boolean hasItemDescription() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'item_description' field.
      * @return This builder.
      */
    public com.kat.avropossimulator.model.Item.Builder clearItemDescription() {
      item_description = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'item_price' field.
      * @return The value.
      */
    public java.lang.Double getItemPrice() {
      return item_price;
    }


    /**
      * Sets the value of the 'item_price' field.
      * @param value The value of 'item_price'.
      * @return This builder.
      */
    public com.kat.avropossimulator.model.Item.Builder setItemPrice(java.lang.Double value) {
      validate(fields()[2], value);
      this.item_price = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'item_price' field has been set.
      * @return True if the 'item_price' field has been set, false otherwise.
      */
    public boolean hasItemPrice() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'item_price' field.
      * @return This builder.
      */
    public com.kat.avropossimulator.model.Item.Builder clearItemPrice() {
      item_price = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'item_quantity' field.
      * @return The value.
      */
    public java.lang.Integer getItemQuantity() {
      return item_quantity;
    }


    /**
      * Sets the value of the 'item_quantity' field.
      * @param value The value of 'item_quantity'.
      * @return This builder.
      */
    public com.kat.avropossimulator.model.Item.Builder setItemQuantity(java.lang.Integer value) {
      validate(fields()[3], value);
      this.item_quantity = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'item_quantity' field has been set.
      * @return True if the 'item_quantity' field has been set, false otherwise.
      */
    public boolean hasItemQuantity() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'item_quantity' field.
      * @return This builder.
      */
    public com.kat.avropossimulator.model.Item.Builder clearItemQuantity() {
      item_quantity = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'total_value' field.
      * @return The value.
      */
    public java.lang.Double getTotalValue() {
      return total_value;
    }


    /**
      * Sets the value of the 'total_value' field.
      * @param value The value of 'total_value'.
      * @return This builder.
      */
    public com.kat.avropossimulator.model.Item.Builder setTotalValue(java.lang.Double value) {
      validate(fields()[4], value);
      this.total_value = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'total_value' field has been set.
      * @return True if the 'total_value' field has been set, false otherwise.
      */
    public boolean hasTotalValue() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'total_value' field.
      * @return This builder.
      */
    public com.kat.avropossimulator.model.Item.Builder clearTotalValue() {
      total_value = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Item build() {
      try {
        Item record = new Item();
        record.item_code = fieldSetFlags()[0] ? this.item_code : (java.lang.String) defaultValue(fields()[0]);
        record.item_description = fieldSetFlags()[1] ? this.item_description : (java.lang.String) defaultValue(fields()[1]);
        record.item_price = fieldSetFlags()[2] ? this.item_price : (java.lang.Double) defaultValue(fields()[2]);
        record.item_quantity = fieldSetFlags()[3] ? this.item_quantity : (java.lang.Integer) defaultValue(fields()[3]);
        record.total_value = fieldSetFlags()[4] ? this.total_value : (java.lang.Double) defaultValue(fields()[4]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Item>
    WRITER$ = (org.apache.avro.io.DatumWriter<Item>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Item>
    READER$ = (org.apache.avro.io.DatumReader<Item>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    if (this.item_code == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.item_code);
    }

    if (this.item_description == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.item_description);
    }

    if (this.item_price == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeDouble(this.item_price);
    }

    if (this.item_quantity == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeInt(this.item_quantity);
    }

    if (this.total_value == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeDouble(this.total_value);
    }

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      if (in.readIndex() != 1) {
        in.readNull();
        this.item_code = null;
      } else {
        this.item_code = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.item_description = null;
      } else {
        this.item_description = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.item_price = null;
      } else {
        this.item_price = in.readDouble();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.item_quantity = null;
      } else {
        this.item_quantity = in.readInt();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.total_value = null;
      } else {
        this.total_value = in.readDouble();
      }

    } else {
      for (int i = 0; i < 5; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          if (in.readIndex() != 1) {
            in.readNull();
            this.item_code = null;
          } else {
            this.item_code = in.readString();
          }
          break;

        case 1:
          if (in.readIndex() != 1) {
            in.readNull();
            this.item_description = null;
          } else {
            this.item_description = in.readString();
          }
          break;

        case 2:
          if (in.readIndex() != 1) {
            in.readNull();
            this.item_price = null;
          } else {
            this.item_price = in.readDouble();
          }
          break;

        case 3:
          if (in.readIndex() != 1) {
            in.readNull();
            this.item_quantity = null;
          } else {
            this.item_quantity = in.readInt();
          }
          break;

        case 4:
          if (in.readIndex() != 1) {
            in.readNull();
            this.total_value = null;
          } else {
            this.total_value = in.readDouble();
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










